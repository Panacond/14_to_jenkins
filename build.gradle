plugins {
    id 'java'
    id 'io.qameta.allure' version '2.9.6'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/io.qameta.allure/allure-testng
    implementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.17.3'
    // https://mvnrepository.com/artifact/io.qameta.allure/allure-commandline
    implementation 'io.qameta.allure:allure-commandline:2.17.3'
    implementation group: 'io.qameta.allure', name: 'allure-assertj', version: '2.17.3'
    // https://mvnrepository.com/artifact/io.qameta.allure/allure-junit5
    //     ???
//    testImplementation 'io.qameta.allure:allure-junit5:2.17.3'
    testImplementation 'io.qameta.allure:allure-rest-assured:2.17.3'
    // https://mvnrepository.com/artifact/io.qameta.allure/allure-java-commons
    testImplementation 'io.qameta.allure:allure-java-commons:2.17.3'
    // https://mvnrepository.com/artifact/org.aspectj/aspectjweaver
    testImplementation 'org.aspectj:aspectjweaver:1.9.5'





    // https://mvnrepository.com/artifact/org.uncommons/reportng
    testImplementation group: 'org.uncommons', name: 'reportng', version: '1.1.4'
    // https://mvnrepository.com/artifact/log4j/log4j
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.2.1'
    // https://mvnrepository.com/artifact/org.testng/testng
    implementation group: 'org.testng', name: 'testng', version: '7.6.0'
    // https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '5.2.0'
}

test {
    useTestNG() {
//        suites 'firstTestOne.xml'
    }
}

task MyTest(type: Test){
    useTestNG(){
        suites 'firstTestOne.xml'
    }
}

task JavatpointTask {
    ext.myProperty = "This is a custom property"
}

task printTask {
    doLast {
        println JavatpointTask.myProperty
    }
}

task create(type: Zip){
    from projectDir
    include 'src/**/*'
    include '*.gradle'
    doLast {
        println "Path to zip $path"
    }
}

task copyResources(type:Copy) {
    from layout.projectDirectory.dir("src/main/resources")
    include('**/config.properties', '**/*.xml')
    into layout.projectDirectory.dir("src/test/resources")
}